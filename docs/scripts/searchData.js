pages = [{"l":"docs/index.html","n":"TinyScalaUtils","t":"TinyScalaUtils","d":"","k":"static"},
{"l":"docs/examples.html","n":"Code Examples","t":"Code Examples","d":"","k":"static"},
{"l":"index.html","n":"API","t":"API","d":"","k":"static"},
{"l":"tinyscalautils/assertions.html","n":"tinyscalautils.assertions","t":"package tinyscalautils.assertions","d":"tinyscalautils/assertions","k":"package"},
{"l":"tinyscalautils/assertions.html","n":"checkNonNull","t":"def checkNonNull[A <: AnyRef](obj: A): obj","d":"tinyscalautils/assertions","k":"def"},
{"l":"tinyscalautils/assertions.html","n":"require","t":"def require(condition: Boolean, message: => String, args: => Any*): Unit","d":"tinyscalautils/assertions","k":"def"},
{"l":"tinyscalautils/assertions.html","n":"require","t":"def require(condition: Boolean): Unit","d":"tinyscalautils/assertions","k":"def"},
{"l":"tinyscalautils/assertions.html","n":"requireState","t":"def requireState(condition: Boolean, message: => String, args: => Any*): Unit","d":"tinyscalautils/assertions","k":"def"},
{"l":"tinyscalautils/assertions.html","n":"requireState","t":"def requireState(condition: Boolean): Unit","d":"tinyscalautils/assertions","k":"def"},
{"l":"tinyscalautils/control.html","n":"tinyscalautils.control","t":"package tinyscalautils.control","d":"tinyscalautils/control","k":"package"},
{"l":"tinyscalautils/control.html","n":"circular","t":"def circular: Iterator[A]","d":"tinyscalautils/control","k":"def"},
{"l":"tinyscalautils/control.html","n":"interruptibly","t":"def interruptibly[A](code: => A): A","d":"tinyscalautils/control","k":"def"},
{"l":"tinyscalautils/control.html","n":"limitedStack","t":"def limitedStack[A](code: => A): A","d":"tinyscalautils/control","k":"def"},
{"l":"tinyscalautils/control.html","n":"stoppably","t":"def stoppably[A](delay: Double)(code: => A): A","d":"tinyscalautils/control","k":"def"},
{"l":"tinyscalautils/control.html","n":"times","t":"def times(code: => U): Unit","d":"tinyscalautils/control","k":"def"},
{"l":"tinyscalautils/io.html","n":"tinyscalautils.io","t":"package tinyscalautils.io","d":"tinyscalautils/io","k":"package"},
{"l":"tinyscalautils/io.html","n":"findResource","t":"def findResource(name: String): URL","d":"tinyscalautils/io","k":"def"},
{"l":"tinyscalautils/io.html","n":"listLines","t":"def listLines(file: Path, silent: Boolean): List[String]","d":"tinyscalautils/io","k":"def"},
{"l":"tinyscalautils/io.html","n":"listPaths","t":"def listPaths(dir: Path, silent: Boolean): List[Path]","d":"tinyscalautils/io","k":"def"},
{"l":"tinyscalautils/lang.html","n":"tinyscalautils.lang","t":"package tinyscalautils.lang","d":"tinyscalautils/lang","k":"package"},
{"l":"tinyscalautils/lang.html","n":"==>","t":"def ==>(inline right: Boolean): Boolean","d":"tinyscalautils/lang","k":"def"},
{"l":"tinyscalautils/lang.html","n":"implies","t":"def implies(inline right: Boolean): Boolean","d":"tinyscalautils/lang","k":"def"},
{"l":"tinyscalautils/lang.html","n":"unit","t":"def unit: Unit","d":"tinyscalautils/lang","k":"def"},
{"l":"tinyscalautils/lang/InterruptibleConstructor.html","n":"InterruptibleConstructor","t":"trait InterruptibleConstructor","d":"tinyscalautils/lang/InterruptibleConstructor","k":"trait"},
{"l":"tinyscalautils/lang/InterruptibleEquality.html","n":"InterruptibleEquality","t":"trait InterruptibleEquality","d":"tinyscalautils/lang/InterruptibleEquality","k":"trait"},
{"l":"tinyscalautils/lang/StackOverflowException.html","n":"StackOverflowException","t":"class StackOverflowException(error: StackOverflowError) extends RuntimeException","d":"tinyscalautils/lang/StackOverflowException","k":"class"},
{"l":"tinyscalautils/text.html","n":"tinyscalautils.text","t":"package tinyscalautils.text","d":"tinyscalautils/text","k":"package"},
{"l":"tinyscalautils/text.html","n":"cleanCRLF","t":"def cleanCRLF: String","d":"tinyscalautils/text","k":"def"},
{"l":"tinyscalautils/text.html","n":"pad","t":"def pad(minLen: Int, padding: Char): String","d":"tinyscalautils/text","k":"def"},
{"l":"tinyscalautils/text.html","n":"printf","t":"def printf(format: String, args: Any*)(using mode: PrintingMode): Unit","d":"tinyscalautils/text","k":"def"},
{"l":"tinyscalautils/text.html","n":"println","t":"def println(arg: Any)(using mode: PrintingMode): Unit","d":"tinyscalautils/text","k":"def"},
{"l":"tinyscalautils/text.html","n":"short","t":"def short: String","d":"tinyscalautils/text","k":"def"},
{"l":"tinyscalautils/text.html","n":"short","t":"def short(maxLen: Int): String","d":"tinyscalautils/text","k":"def"},
{"l":"tinyscalautils/text.html","n":"silentMode","t":"given silentMode: PrintingMode","d":"tinyscalautils/text","k":"given"},
{"l":"tinyscalautils/text.html","n":"standardMode","t":"given standardMode: PrintingMode","d":"tinyscalautils/text","k":"given"},
{"l":"tinyscalautils/text.html","n":"threadMode","t":"given threadMode: PrintingMode","d":"tinyscalautils/text","k":"given"},
{"l":"tinyscalautils/text.html","n":"threadTimeDemoMode","t":"given threadTimeDemoMode: PrintingMode","d":"tinyscalautils/text","k":"given"},
{"l":"tinyscalautils/text.html","n":"threadTimeMode","t":"given threadTimeMode: PrintingMode","d":"tinyscalautils/text","k":"given"},
{"l":"tinyscalautils/text.html","n":"timeDemoMode","t":"given timeDemoMode: PrintingMode","d":"tinyscalautils/text","k":"given"},
{"l":"tinyscalautils/text.html","n":"timeMode","t":"given timeMode: PrintingMode","d":"tinyscalautils/text","k":"given"},
{"l":"tinyscalautils/text/PrintingMode.html","n":"PrintingMode","t":"trait PrintingMode","d":"tinyscalautils/text/PrintingMode","k":"trait"},
{"l":"tinyscalautils/threads.html","n":"tinyscalautils.threads","t":"package tinyscalautils.threads","d":"tinyscalautils/threads","k":"package"},
{"l":"tinyscalautils/threads.html","n":"completeOnTimeout","t":"def completeOnTimeout(seconds: Double, strict: Boolean)(fallbackCode: => A)(using exec: ExecutionContext, timer: ScheduledExecutorService): Future[A]","d":"tinyscalautils/threads","k":"def"},
{"l":"tinyscalautils/threads.html","n":"isMarkedThread","t":"def isMarkedThread: Boolean","d":"tinyscalautils/threads","k":"def"},
{"l":"tinyscalautils/threads.html","n":"joined","t":"def joined(seconds: Double): Boolean","d":"tinyscalautils/threads","k":"def"},
{"l":"tinyscalautils/threads.html","n":"newStoppableThread","t":"def newStoppableThread[U](delay: Double, name: String, start: Boolean, daemon: Boolean, logging: Boolean)(code: => U): Thread","d":"tinyscalautils/threads","k":"def"},
{"l":"tinyscalautils/threads.html","n":"newThread","t":"def newThread[U](name: String, start: Boolean, daemon: Boolean)(code: => U): Thread","d":"tinyscalautils/threads","k":"def"},
{"l":"tinyscalautils/threads.html","n":"orTimeout","t":"def orTimeout(seconds: Double, cancelCode: => Any)(using exec: ExecutionContext, timer: ScheduledExecutorService): Future[A]","d":"tinyscalautils/threads","k":"def"},
{"l":"tinyscalautils/threads.html","n":"shutdownAndWait","t":"def shutdownAndWait(seconds: Double, force: Boolean): Boolean","d":"tinyscalautils/threads","k":"def"},
{"l":"tinyscalautils/threads.html","n":"timeoutTimer","t":"given timeoutTimer: ScheduledExecutorService","d":"tinyscalautils/threads","k":"given"},
{"l":"tinyscalautils/threads.html","n":"withContext","t":"def withContext[A, Exec](exec: Exec)(code: Exec => Future[A]): A","d":"tinyscalautils/threads","k":"def"},
{"l":"tinyscalautils/threads.html","n":"withLocalContext","t":"def withLocalContext[A, Exec <: ExecutorService](exec: Exec)(code: Exec => Future[A]): A","d":"tinyscalautils/threads","k":"def"},
{"l":"tinyscalautils/threads/Executors.html","n":"Executors","t":"class Executors","d":"tinyscalautils/threads/Executors","k":"class"},
{"l":"tinyscalautils/threads/Executors.html","n":"newThreadPool","t":"def newThreadPool(size: Int): ExecutionContextExecutorService","d":"tinyscalautils/threads/Executors","k":"def"},
{"l":"tinyscalautils/threads/Executors.html","n":"newUnlimitedThreadPool","t":"def newUnlimitedThreadPool(keepAlive: Double): ExecutionContextExecutorService","d":"tinyscalautils/threads/Executors","k":"def"},
{"l":"tinyscalautils/threads/Executors.html","n":"silent","t":"def silent: Executors","d":"tinyscalautils/threads/Executors","k":"def"},
{"l":"tinyscalautils/threads/Executors.html","n":"withFactory","t":"def withFactory(tf: ThreadFactory): Executors","d":"tinyscalautils/threads/Executors","k":"def"},
{"l":"tinyscalautils/threads/Executors.html","n":"withRejectionPolicy","t":"def withRejectionPolicy(rej: RejectedExecutionHandler): Executors","d":"tinyscalautils/threads/Executors","k":"def"},
{"l":"tinyscalautils/threads/Executors$.html","n":"Executors","t":"object Executors extends Executors","d":"tinyscalautils/threads/Executors$","k":"object"},
{"l":"tinyscalautils/threads/Executors$.html","n":"global","t":"given global: ExecutionContextExecutorService","d":"tinyscalautils/threads/Executors$","k":"given"},
{"l":"tinyscalautils/threads/KeepThreadsFactory.html","n":"KeepThreadsFactory","t":"class KeepThreadsFactory extends ThreadFactory","d":"tinyscalautils/threads/KeepThreadsFactory","k":"class"},
{"l":"tinyscalautils/threads/KeepThreadsFactory.html","n":"allThreads","t":"def allThreads: Iterable[Thread]","d":"tinyscalautils/threads/KeepThreadsFactory","k":"def"},
{"l":"tinyscalautils/threads/KeepThreadsFactory.html","n":"newThread","t":"def newThread(r: Runnable): Thread","d":"tinyscalautils/threads/KeepThreadsFactory","k":"def"},
{"l":"tinyscalautils/threads/KeepThreadsFactory.html","n":"resetThreads","t":"def resetThreads(): Unit","d":"tinyscalautils/threads/KeepThreadsFactory","k":"def"},
{"l":"tinyscalautils/threads/KeepThreadsFactory$.html","n":"KeepThreadsFactory","t":"object KeepThreadsFactory","d":"tinyscalautils/threads/KeepThreadsFactory$","k":"object"},
{"l":"tinyscalautils/threads/KeepThreadsFactory$.html","n":"apply","t":"def apply(tf: ThreadFactory): KeepThreadsFactory","d":"tinyscalautils/threads/KeepThreadsFactory$","k":"def"},
{"l":"tinyscalautils/threads/KeepThreadsFactory$.html","n":"apply","t":"def apply(): KeepThreadsFactory","d":"tinyscalautils/threads/KeepThreadsFactory$","k":"def"},
{"l":"tinyscalautils/threads/MarkedThread.html","n":"MarkedThread","t":"trait MarkedThread extends Thread","d":"tinyscalautils/threads/MarkedThread","k":"trait"},
{"l":"tinyscalautils/threads/MarkedThreadsFactory.html","n":"MarkedThreadsFactory","t":"class MarkedThreadsFactory extends ThreadFactory","d":"tinyscalautils/threads/MarkedThreadsFactory","k":"class"},
{"l":"tinyscalautils/threads/MarkedThreadsFactory.html","n":"newThread","t":"def newThread(r: Runnable): Thread","d":"tinyscalautils/threads/MarkedThreadsFactory","k":"def"},
{"l":"tinyscalautils/threads/MarkedThreadsFactory$.html","n":"MarkedThreadsFactory","t":"object MarkedThreadsFactory extends MarkedThreadsFactory","d":"tinyscalautils/threads/MarkedThreadsFactory$","k":"object"},
{"l":"tinyscalautils/threads/StoppableThread.html","n":"StoppableThread","t":"class StoppableThread(task: Runnable, delay: Double, logging: Boolean)(using timer: ScheduledExecutorService) extends Thread","d":"tinyscalautils/threads/StoppableThread","k":"class"},
{"l":"tinyscalautils/timing.html","n":"tinyscalautils.timing","t":"package tinyscalautils.timing","d":"tinyscalautils/timing","k":"package"},
{"l":"tinyscalautils/timing.html","n":"SlowIterator","t":"given SlowIterator: SlowIterator.type","d":"tinyscalautils/timing","k":"given"},
{"l":"tinyscalautils/timing.html","n":"SlowLazyList","t":"given SlowLazyList: SlowLazyList.type","d":"tinyscalautils/timing","k":"given"},
{"l":"tinyscalautils/timing.html","n":"SlowSource","t":"given SlowSource: SlowSource.type","d":"tinyscalautils/timing","k":"given"},
{"l":"tinyscalautils/timing.html","n":"delay","t":"def delay[A](seconds: Double, start: Long)(code: => A): A","d":"tinyscalautils/timing","k":"def"},
{"l":"tinyscalautils/timing.html","n":"getTime","t":"def getTime(): Long","d":"tinyscalautils/timing","k":"def"},
{"l":"tinyscalautils/timing.html","n":"now","t":"def now(): Long","d":"tinyscalautils/timing","k":"def"},
{"l":"tinyscalautils/timing.html","n":"sleep","t":"def sleep(seconds: Double, start: Long): Unit","d":"tinyscalautils/timing","k":"def"},
{"l":"tinyscalautils/timing.html","n":"timeIt","t":"def timeIt[A](code: => A): (A, Double)","d":"tinyscalautils/timing","k":"def"},
{"l":"tinyscalautils/timing.html","n":"timeOf","t":"def timeOf[U](code: => U): Double","d":"tinyscalautils/timing","k":"def"},
{"l":"tinyscalautils/timing/SlowIterator$.html","n":"SlowIterator","t":"object SlowIterator","d":"tinyscalautils/timing/SlowIterator$","k":"object"},
{"l":"tinyscalautils/timing/SlowIterator$.html","n":"slow","t":"def slow(seconds: Double, delayedElements: Int): Iterator[A]","d":"tinyscalautils/timing/SlowIterator$","k":"def"},
{"l":"tinyscalautils/timing/SlowLazyList$.html","n":"SlowLazyList","t":"object SlowLazyList","d":"tinyscalautils/timing/SlowLazyList$","k":"object"},
{"l":"tinyscalautils/timing/SlowLazyList$.html","n":"slow","t":"def slow(seconds: Double, delayedElements: Int): LazyList[A]","d":"tinyscalautils/timing/SlowLazyList$","k":"def"},
{"l":"tinyscalautils/timing/SlowSource$.html","n":"SlowSource","t":"object SlowSource","d":"tinyscalautils/timing/SlowSource$","k":"object"},
{"l":"tinyscalautils/timing/SlowSource$.html","n":"slow","t":"def slow(seconds: Double, delayedCharacters: Int): Source","d":"tinyscalautils/timing/SlowSource$","k":"def"}];